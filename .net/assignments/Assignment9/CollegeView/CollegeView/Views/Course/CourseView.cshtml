@{
    ViewData["Title"] = "Courses";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary"><i class="bi bi-book"></i> Course List</h2>
        <button id="addCourseBtn" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add Course
        </button>
    </div>

    <div class="card shadow-lg p-4">
        <div class="d-flex justify-content-between mb-3">
            <button id="loadBtn" class="btn btn-primary">
                <i class="bi bi-arrow-clockwise"></i> Load Courses
            </button>
        </div>

        <div id="courses" class="table-responsive"></div>
    </div>
</div>

<!-- Modal for Add/Edit -->
<div class="modal fade" id="courseModal" tabindex="-1" aria-labelledby="courseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="courseModalLabel">Add / Edit Course</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="courseForm">
                    <input type="hidden" id="courseId" />
                    <div class="mb-3">
                        <label for="courseCode" class="form-label fw-semibold">Course Code</label>
                        <input type="text" id="courseCode" class="form-control" placeholder="Enter course code" required />
                    </div>
                    <div class="mb-3">
                        <label for="courseName" class="form-label fw-semibold">Course Name</label>
                        <input type="text" id="courseName" class="form-control" placeholder="Enter course name" required />
                    </div>
                    <div class="mb-3">
                        <label for="department" class="form-label fw-semibold">Department</label>
                        <input type="text" id="department" class="form-control" placeholder="Enter department" />
                    </div>
                    <div class="mb-3">
                        <label for="semester" class="form-label fw-semibold">Semester</label>
                        <input type="number" id="semester" class="form-control" placeholder="Enter semester" />
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- jQuery + Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let coursesData = [];

    // Load Courses
    $("#loadBtn").click(function () {
        const token = localStorage.getItem("jwtToken");

        if (!token) {
            alert("Please login first!");
            window.location.href = "/Auth/Login";
            return;
        }

        $.ajax({
            url: "https://localhost:7165/api/CollegeApp/Courses/All",
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {
                coursesData = data;
                renderTable(data);
            },
            error: function (xhr) {
                if (xhr.status === 401) {
                    $("#courses").html("<p class='text-danger'>Unauthorized. Please login again.</p>");
                } else {
                    $("#courses").html("<p class='text-danger'>Error fetching data.</p>");
                }
            }
        });
    });

    // Render Bootstrap Table
    function renderTable(data) {
        if (!data || data.length === 0) {
            $("#courses").html("<p class='text-muted text-center'>No courses found.</p>");
            return;
        }

        let html = `
            <table class='table table-hover align-middle text-center'>
                <thead class='table-dark'>
                    <tr>
                        <th>ID</th>
                        <th>Course Code</th>
                        <th>Course Name</th>
                        <th>Department</th>
                        <th>Semester</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
        `;

        data.forEach(course => {
            html += `
                <tr>
                    <td>${course.courseId}</td>
                    <td>${course.courseCode}</td>
                    <td>${course.courseName}</td>
                    <td>${course.department || 'N/A'}</td>
                    <td>${course.semester || 'N/A'}</td>
                    <td>
                        <button class='btn btn-warning btn-sm me-2 editBtn' data-id='${course.courseId}'>
                            <i class='bi bi-pencil-square'></i> Edit
                        </button>
                        <button class='btn btn-danger btn-sm deleteBtn' data-id='${course.courseId}'>
                            <i class='bi bi-trash'></i> Delete
                        </button>
                    </td>
                </tr>
            `;
        });

        html += "</tbody></table>";
        $("#courses").html(html);
    }

    // Open Modal for Add
    $("#addCourseBtn").click(function () {
        $("#courseForm")[0].reset();
        $("#courseId").val('');
        $("#courseModalLabel").text("Add Course");
        $("#courseModal").modal("show");
    });

    // Open Modal for Edit
    $(document).on("click", ".editBtn", function () {
        const id = $(this).data("id");
        const course = coursesData.find(course => course.courseId === id);
        if (course) {
            $("#courseId").val(course.courseId);
            $("#courseCode").val(course.courseCode);
            $("#courseName").val(course.courseName);
            $("#department").val(course.department || '');
            $("#semester").val(course.semester || '');
            $("#courseModalLabel").text("Edit Course");
            $("#courseModal").modal("show");
        }
    });

    // Delete Course
    $(document).on("click", ".deleteBtn", function () {
        const id = $(this).data("id");
        const course = coursesData.find(course => course.courseId === id);

        if (course && confirm(`Are you sure you want to delete ${course.courseName}?`)) {
            const token = localStorage.getItem("jwtToken");

            if (!token) {
                alert("Please login first!");
                window.location.href = "/Auth/Login";
                return;
            }

            $.ajax({
                url: `https://localhost:7165/api/CollegeApp/Courses/Delete/${id}`,
                type: "DELETE",
                headers: { "Authorization": "Bearer " + token },
                success: function () {
                    $("#loadBtn").click(); // Reload table
                    alert("Course deleted successfully!");
                },
                error: function (xhr) {
                    alert("Error deleting course.");
                    console.error("Delete error:", xhr);
                }
            });
        }
    });

    // Submit Form (Add or Edit)
    $("#courseForm").submit(function (e) {
        e.preventDefault();

        const token = localStorage.getItem("jwtToken");
        if (!token) {
            alert("Please login first!");
            window.location.href = "/Auth/Login";
            return;
        }

        const course = {
            courseId: $("#courseId").val() || 0,
            courseCode: $("#courseCode").val(),
            courseName: $("#courseName").val(),
            department: $("#department").val() || null,
            semester: $("#semester").val() ? parseInt($("#semester").val()) : null
        };

        const isEdit = course.courseId > 0;

        // Updated API endpoints
        const apiUrl = isEdit
            ? `https://localhost:7165/api/CollegeApp/Courses/Update/${course.courseId}`
            : "https://localhost:7165/api/CollegeApp/Courses/Create";

        $.ajax({
            url: apiUrl,
            type: isEdit ? "PUT" : "POST",
            headers: {
                "Authorization": "Bearer " + token,
                "Content-Type": "application/json"
            },
            data: JSON.stringify(course),
            success: function () {
                $("#courseModal").modal("hide");
                $("#loadBtn").click(); // Reload table
                alert(`Course ${isEdit ? 'updated' : 'added'} successfully!`);
            },
            error: function (xhr) {
                alert("Error saving course.");
                console.error("Save error:", xhr);
            }
        });
    });

    // Auto-load courses when page loads if user is authenticated
    $(document).ready(function () {
        const token = localStorage.getItem("jwtToken");
        if (token) {
            $("#loadBtn").click();
        }
    });
</script>





