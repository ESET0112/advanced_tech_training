@{
    ViewData["Title"] = "Students";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary"><i class="bi bi-people"></i> Student List</h2>
        <button id="addStudentBtn" class="btn btn-success">
            <i class="bi bi-person-plus"></i> Add Student
        </button>
    </div>

    <div class="card shadow-lg p-4">
        <div class="d-flex justify-content-between mb-3">
            <button id="loadBtn" class="btn btn-primary">
                <i class="bi bi-arrow-clockwise"></i> Load Students
            </button>
        </div>

        <div id="students" class="table-responsive"></div>
    </div>
</div>

<!-- Modal for Add/Edit -->
<div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="studentModalLabel">Add / Edit Student</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="studentForm">
                    <input type="hidden" id="studentId" />
                    <div class="mb-3">
                        <label for="rollNumber" class="form-label fw-semibold">Roll Number</label>
                        <input type="text" id="rollNumber" class="form-control" placeholder="Enter roll number" required />
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label fw-semibold">Name</label>
                        <input type="text" id="name" class="form-control" placeholder="Enter student name" required />
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label fw-semibold">Email</label>
                        <input type="email" id="email" class="form-control" placeholder="Enter email" />
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label fw-semibold">Phone</label>
                        <input type="text" id="phone" class="form-control" placeholder="Enter phone number" />
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label fw-semibold">Address</label>
                        <textarea id="address" class="form-control" placeholder="Enter address" rows="2"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="dateOfBirth" class="form-label fw-semibold">Date of Birth</label>
                        <input type="date" id="dateOfBirth" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="gender" class="form-label fw-semibold">Gender</label>
                        <select id="gender" class="form-control">
                            <option value="">Select Gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="courseId" class="form-label fw-semibold">Course ID</label>
                        <select id="courseId" class="form-control">
                            <option value="">Select Course ID</option>
                            <!-- Course options will be populated dynamically -->
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- jQuery + Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let studentsData = [];
    let coursesData = [];

    // Load Students
    $("#loadBtn").click(function () {
        const token = localStorage.getItem("jwtToken");

        if (!token) {
            alert("Please login first!");
            window.location.href = "/Auth/Login";
            return;
        }

        $.ajax({
            url: "https://localhost:7165/api/CollegeApp/Students/All",
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {
                studentsData = data;
                renderStudentTable(data);
            },
            error: function (xhr) {
                if (xhr.status === 401) {
                    $("#students").html("<p class='text-danger'>Unauthorized. Please login again.</p>");
                } else {
                    $("#students").html("<p class='text-danger'>Error fetching data.</p>");
                }
            }
        });
    });

    // Load Courses for dropdown
    function loadCourses() {
        const token = localStorage.getItem("jwtToken");
        if (!token) return;

        $.ajax({
            url: "https://localhost:7165/api/CollegeApp/Courses/All",
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {
                coursesData = data;
                populateCourseDropdown();
            },
            error: function (xhr) {
                console.error("Error loading courses:", xhr);
            }
        });
    }

    // Populate course dropdown
    function populateCourseDropdown() {
        const courseDropdown = $('#courseId');
        courseDropdown.empty();
        courseDropdown.append('<option value="">Select Course ID</option>');

        coursesData.forEach(course => {
            courseDropdown.append(`<option value="${course.courseId}">${course.courseId}</option>`);
        });
    }

    // Format date for display
    function formatStudentDate(dateString) {
        if (!dateString) return 'N/A';
        const date = new Date(dateString);
        return date.toLocaleDateString();
    }

    // Render Bootstrap Table
    function renderStudentTable(data) {
        if (!data || data.length === 0) {
            $("#students").html("<p class='text-muted text-center'>No students found.</p>");
            return;
        }

        let html = `
            <table class='table table-hover align-middle text-center'>
                <thead class='table-dark'>
                    <tr>
                        <th>ID</th>
                        <th>Roll Number</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Date of Birth</th>
                        <th>Gender</th>
                        <th>Course ID</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
        `;

        data.forEach(student => {
            html += `
                <tr>
                    <td>${student.studentId}</td>
                    <td>${student.rollNumber}</td>
                    <td>${student.name}</td>
                    <td>${student.email || 'N/A'}</td>
                    <td>${student.phone || 'N/A'}</td>
                    <td>${formatStudentDate(student.dateOfBirth)}</td>
                    <td>${student.gender || 'N/A'}</td>
                    <td>${student.courseId || 'N/A'}</td>
                    <td>
                        <button class='btn btn-warning btn-sm me-2 editStudentBtn' data-id='${student.studentId}'>
                            <i class='bi bi-pencil-square'></i> Edit
                        </button>
                        <button class='btn btn-danger btn-sm deleteStudentBtn' data-id='${student.studentId}'>
                            <i class='bi bi-trash'></i> Delete
                        </button>
                    </td>
                </tr>
            `;
        });

        html += "</tbody></table>";
        $("#students").html(html);
    }

    // Open Modal for Add Student
    $("#addStudentBtn").click(function () {
        $("#studentForm")[0].reset();
        $("#studentId").val('');
        $("#studentModalLabel").text("Add Student");
        loadCourses();
        $("#studentModal").modal("show");
    });

    // Open Modal for Edit Student
    $(document).on("click", ".editStudentBtn", function () {
        const id = $(this).data("id");
        const student = studentsData.find(student => student.studentId === id);
        if (student) {
            $("#studentId").val(student.studentId);
            $("#rollNumber").val(student.rollNumber);
            $("#name").val(student.name);
            $("#email").val(student.email || '');
            $("#phone").val(student.phone || '');
            $("#address").val(student.address || '');

            // Format date for date input (YYYY-MM-DD)
            if (student.dateOfBirth) {
                const date = new Date(student.dateOfBirth);
                const formattedDate = date.toISOString().split('T')[0];
                $("#dateOfBirth").val(formattedDate);
            } else {
                $("#dateOfBirth").val('');
            }

            $("#gender").val(student.gender || '');
            $("#studentModalLabel").text("Edit Student");

            loadCourses(); // Load courses and then set the selected course
            setTimeout(() => {
                $("#courseId").val(student.courseId || '');
            }, 100);

            $("#studentModal").modal("show");
        }
    });

    // Delete Student
    $(document).on("click", ".deleteStudentBtn", function () {
        const id = $(this).data("id");
        const student = studentsData.find(student => student.studentId === id);

        if (student && confirm(`Are you sure you want to delete ${student.name}?`)) {
            const token = localStorage.getItem("jwtToken");

            if (!token) {
                alert("Please login first!");
                window.location.href = "/Auth/Login";
                return;
            }

            $.ajax({
                url: `https://localhost:7165/api/CollegeApp/Students/Delete/${id}`,
                type: "DELETE",
                headers: { "Authorization": "Bearer " + token },
                success: function () {
                    $("#loadBtn").click(); // Reload table
                    alert("Student deleted successfully!");
                },
                error: function (xhr) {
                    alert("Error deleting student.");
                    console.error("Delete error:", xhr);
                }
            });
        }
    });

    // Submit Student Form (Add or Edit)
    $("#studentForm").submit(function (e) {
        e.preventDefault();

        const token = localStorage.getItem("jwtToken");
        if (!token) {
            alert("Please login first!");
            window.location.href = "/Auth/Login";
            return;
        }

        const student = {
            studentId: $("#studentId").val() || 0,
            rollNumber: $("#rollNumber").val(),
            name: $("#name").val(),
            email: $("#email").val() || null,
            phone: $("#phone").val() || null,
            address: $("#address").val() || null,
            dateOfBirth: $("#dateOfBirth").val() || null,
            gender: $("#gender").val() || null,
            courseId: $("#courseId").val() ? parseInt($("#courseId").val()) : null
        };

        const isEdit = student.studentId > 0;

        const apiUrl = isEdit
            ? `https://localhost:7165/api/CollegeApp/Students/Update/${student.studentId}`
            : "https://localhost:7165/api/CollegeApp/Students/Create";

        $.ajax({
            url: apiUrl,
            type: isEdit ? "PUT" : "POST",
            headers: {
                "Authorization": "Bearer " + token,
                "Content-Type": "application/json"
            },
            data: JSON.stringify(student),
            success: function () {
                $("#studentModal").modal("hide");
                $("#loadBtn").click(); // Reload table
                alert(`Student ${isEdit ? 'updated' : 'added'} successfully!`);
            },
            error: function (xhr) {
                alert("Error saving student.");
                console.error("Save error:", xhr);
            }
        });
    });

    // Auto-load students when page loads if user is authenticated
    $(document).ready(function () {
        const token = localStorage.getItem("jwtToken");
        if (token) {
            $("#loadBtn").click();
        }
    });
</script>